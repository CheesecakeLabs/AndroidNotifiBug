{"name":"NotifiBug","tagline":"NotifiBug Library for Android","body":"# NotifiBug Library for Android\r\n\r\n[![Download](https://api.bintray.com/packages/cheesecakelabs/maven/notifibug/images/download.svg)](https://bintray.com/cheesecakelabs/maven/notifibug/_latestVersion)\r\n[![License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](http://www.opensource.org/licenses/MIT)\r\n\r\nIt does what every bug client needs to do but little earlier and in a smarter way\r\n\r\n## Setup\r\n\r\nReleases are published to [bintray jcenter](https://bintray.com/bintray/jcenter) ([package](https://bintray.com/cheesecakelabs/maven/notifibug/view) appears immediately after release)\r\n\r\nGradle:\r\n\r\n```groovy\r\ncompile 'io.ckl.notifibug:notifibug:0.3.0-snapshot'\r\n```\r\n\r\n## How to use it\r\n\r\nBelow is an example of how to register NotifiBug library to handle uncaught exceptions of you app and send \r\ncrash reports to NotifiCrash service.\r\n\r\n### Permissions in manifest\r\n\r\nThe `AndroidManifest.xml` requires the permission `android.permission.INTERNET` and would like the permission `android.permission.ACCESS_NETWORK_STATE` even though optional.\r\n\r\n```xml\r\n<!-- REQUIRED to send captures to NotifiCrash service -->\r\n<uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n<!-- OPTIONAL but makes NotifiBug smarter -->\r\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n```\r\n\r\n### Init library in your project\r\n\r\n``` java\r\npublic class MyApplication extends Application {\r\n\r\n\t@Override\r\n\tpublic void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\r\n\t\t// NotifiBug will look for uncaught exceptions from previous runs and send them\r\n\t\tNotifiBug.init(this, \"YOUR_SERIAL_NUMBER\");\r\n\r\n\t}\r\n\r\n}\r\n```\r\n\r\n### Enable debug\r\n\r\nTo enable logcat output in console add `setDebug(true)` just before `init`\r\n\r\n```java\r\n\t// Enable debug output (optional)\r\n\tNotifiBug.setDebug(true);\r\n\t// NotifiBug init\r\n\tNotifiBug.init(this, \"YOUR_SERIAL_NUMBER\");\r\n```\r\n\r\n### Others crash capture libraries\r\n\r\nIf you are using other bug capturing libraries make sure that you init NotifiBug last.\r\n\r\n```java\r\npublic class MyApplication extends Application {\r\n\r\n\t@Override\r\n\tpublic void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\t\r\n\t\t// Other crash libraries\r\n\t\tinitFlurry();\r\n\t\tinitParse();\r\n\r\n\t\t// Make sure that NotifiBug is initialised last\r\n\t\tNotifiBug.init(this, \"YOUR_SERIAL_NUMBER\");\r\n\r\n\t}\r\n\r\n}\r\n```\r\n\r\n## Authors and Contributors\r\n\r\nEdited for NotifiCrash by Marko Arsic (@marsicdev)\r\n\r\nThis is refactored and optimised [Sentry for Android](https://github.com/joshdholtz/Sentry-Android) library.\r\nCredits for most of the code goes to @joshdholtz\r\n\r\n## Support or Contact\r\n\r\nHaving trouble with NotifiBug? Check out the [javadocs](http://cheesecakelabs.github.io/AndroidNotifiBug/javadoc) or contact developer@ckl.io and weâ€™ll help you out.\r\n\r\n## License\r\n\r\nNotifiBug is available under the MIT license. See the [LICENSE](https://github.com/CheesecakeLabs/AndroidNotifiBug/blob/master/LICENSE) file for more info.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}